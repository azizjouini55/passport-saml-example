
version: "3.3"

services:
  auth-service:
    #image: azizjouini/passport-app-saml:latest
    build: .
    container_name: node-auth
    pull_policy: always
    labels:
      - "traefik.enable=true"
      -  "traefik.docker.network=front"
      - "traefik.http.routers.auth-service.rule=(Host(`172.26.120.204`) && PathPrefix(`/`))"
      - "traefik.http.routers.auth-service.entrypoints=http"
      - "traefik.http.services.auth-service.loadbalancer.server.port=3031"
    volumes:
      #replace with real certificates and key paths from your machine 
      - /etc/ssl/certs/ssl-cert-snakeoil.pem:/app/cert/ssl-cert-snakeoil.pem
      - /etc/ssl/private/ssl-cert-snakeoil.key:/app/cert/ssl-cert-snakeoil.key
      - /etc/ssl/aai/dfn-aai.pem:/app/cert/dfn-aai.pem
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - reverse-proxy
    networks:
      - front
    expose:
     - "3031"

  py-app:
    build: ./flask-app
    container_name: test-app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.py-app.rule=(Host(`172.26.120.204) && PathPrefix(`/app`))"
    depends_on:
      - auth-service
      - reverse-proxy
    expose:
      - "8081"
    networks:
     - front

  reverse-proxy:
    image: traefik:v2.9
    container_name: traefik-router
    command: --api.insecure=true  --providers.docker
    labels:
      traefik.http.routers.api.entryPoints: http # Set the Traefik entry point.
 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports: 
      - "8083:80"
      - "8085:8080"
    networks:
       - front 
      

  # prometheus:
  #   image: prom/prometheus:v2.1.0
  #   volumes:
  #     - ./prometheus/:/etc/prometheus/
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/usr/share/prometheus/console_libraries'
  #     - '--web.console.templates=/usr/share/prometheus/consoles'
  #   ports:
  #     - 9090:9090
  #   networks:
  #     - back




networks:
  back:    
    driver: bridge
  front:
    external: true

    

 